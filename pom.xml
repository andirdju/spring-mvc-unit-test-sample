<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.andird</groupId>
	<artifactId>spring-mvc-unit-test-sample</artifactId>
	<name>spring-mvc-unit-test-sample</name>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<org.springframework-version>3.2.2.RELEASE</org.springframework-version>

		<mvn-groovy-batch-version>2.0.6-01</mvn-groovy-batch-version>
		<groovy-version>2.0.6</groovy-version>

		<org.aspectj-version>1.7.2</org.aspectj-version>

		<org.slf4j-version>1.7.2</org.slf4j-version>
		<log4j-version>1.2.17</log4j-version>

		<javax-inject-version>1</javax-inject-version>
		<javax-servlet-version>3.0.1</javax-servlet-version>
		<javax-jsp-version>2.3.0</javax-jsp-version>
		<javax-jstl-version>1.2</javax-jstl-version>

		<junit-version>4.11</junit-version>
		<mockitoVersion>1.9.5</mockitoVersion>
		<hamcrestVersion>1.3</hamcrestVersion>

		<source-version>1.6</source-version>
		<target-version>1.6</target-version>

		<mvn-checkstyle-version>2.10</mvn-checkstyle-version>
		<mvn-jxr-plugin>2.3</mvn-jxr-plugin>
		<mvn-compiler-version>3.0</mvn-compiler-version>
		<mvn-groovy-compiler-version>2.7.0-01</mvn-groovy-compiler-version>
		<mvn-war-version>2.3</mvn-war-version>
		<eclipse-m2e-mapping-version>1.0.0</eclipse-m2e-mapping-version>

		<mvn-jetty-version>8.1.10.v20130312</mvn-jetty-version>
		<mvn-jboss-plugin-version>7.4.Final</mvn-jboss-plugin-version>
		<jboss-version>7.1.1.Final</jboss-version>

		<!-- work around for log manager not set problem for old jboss 7 -->
		<downloaded-jboss-home-dir>target/jboss-as-run/jboss-as-${jboss-version}</downloaded-jboss-home-dir>
		<jvm-args-workaround-for-log-manager>
			-Xms64m
			-Xmx512m
			-XX:MaxPermSize=256m
			-Djava.net.preferIPv4Stack=true
			-Dorg.jboss.resolver.warning=true
			-Dsun.rmi.dgc.client.gcInterval=3600000
			-Dsun.rmi.dgc.server.gcInterval=3600000
			-Djboss.modules.system.pkgs=org.jboss.byteman,org.jboss.logmanager
			-Djava.util.logging.manager=org.jboss.logmanager.LogManager
			-Xbootclasspath/p:${downloaded-jboss-home-dir}/modules/org/jboss/logmanager/main/jboss-logmanager-1.2.0.GA.jar
			-Xbootclasspath/p:${downloaded-jboss-home-dir}/modules/org/jboss/logmanager/log4j/main/jboss-logmanager-log4j-1.0.0.GA.jar
			-Xbootclasspath/p:${downloaded-jboss-home-dir}/modules/org/apache/log4j/main/log4j-1.2.16.jar
		</jvm-args-workaround-for-log-manager>
	</properties>

	<scm>
		<connection>scm:git://github.com/andirdju/spring-mvc-unit-test-sample.git</connection>
		<developerConnection>scm:git@github.com:andirdju/spring-mvc-unit-test-sample.git</developerConnection>
		<url>https://github.com/andirdju/spring-mvc-unit-test-sample</url>
	</scm>

	<dependencies>
		<!-- Lang -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy-version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j-version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax-inject-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax-servlet-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${javax-jsp-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax-jstl-version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockitoVersion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrestVersion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${mvn-checkstyle-version}</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<useFile />
				</configuration>
				<executions>
					<execution>
						<id>check-style</id>
						<phase>compile</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${mvn-compiler-version}</version>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
					<!-- set verbose to be true if you want lots of uninteresting messages -->
					<!-- <verbose>true</verbose> -->
					<source>${source-version}</source>
					<target>${target-version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>${mvn-groovy-compiler-version}</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>${mvn-groovy-batch-version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${mvn-war-version}</version>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${mvn-jetty-version}</version>
			</plugin>
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${mvn-jboss-plugin-version}</version>
				<configuration>
					<version>${jboss-version}</version>
					<!-- work around for log manager not set problem on old jboss 7 -->
					<!-- <jvmArgs>${jvm-args-workaround-for-log-manager}</jvmArgs> -->
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse-m2e-mapping-version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-compiler-plugin
										</artifactId>
										<versionRange>
											[${mvn-compiler-version},)
										</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[${version.checkstyle.plugin},)
										</versionRange>
										<goals>
											<goal>checkstyle</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${mvn-jxr-plugin}</version>
			</plugin>
		</plugins>
	</reporting>
</project>
